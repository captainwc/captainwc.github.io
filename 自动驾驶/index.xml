<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>自动驾驶s on SHUAIKAI&#39;s Blog</title>
    <link>https://kaikaixixi.xyz/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/</link>
    <description>Recent content in 自动驾驶s on SHUAIKAI&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 02 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://kaikaixixi.xyz/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CyberRT框架总览</title>
      <link>https://kaikaixixi.xyz/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cyberrt/cyberrt%E6%A1%86%E6%9E%B6%E6%80%BB%E8%A7%88/</link>
      <pubDate>Wed, 02 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://kaikaixixi.xyz/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cyberrt/cyberrt%E6%A1%86%E6%9E%B6%E6%80%BB%E8%A7%88/</guid>
      <description>&lt;h1 id=&#34;cyberrt框架总览&#34;&gt;CyberRT框架总览&lt;/h1&gt;&#xA;&lt;h2 id=&#34;rtps框架&#34;&gt;RTPS框架&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;flowchart TD&#xA;    subgraph &amp;quot;Core Layer&amp;quot;&#xA;        A[&amp;quot;Core Runtime&amp;quot;]:::core&#xA;        config[&amp;quot;Configuration&amp;quot;]:::config&#xA;    end&#xA;&#xA;    subgraph &amp;quot;Communication &amp;amp; Data Transport&amp;quot;&#xA;        B1[&amp;quot;Transport&amp;quot;]:::comm&#xA;        B2[&amp;quot;Messaging&amp;quot;]:::comm&#xA;        B3[&amp;quot;Data&amp;quot;]:::comm&#xA;        B4[&amp;quot;IO&amp;quot;]:::comm&#xA;    end&#xA;&#xA;    subgraph &amp;quot;Scheduling &amp;amp; Task Management&amp;quot;&#xA;        C1[&amp;quot;Scheduler&amp;quot;]:::sched&#xA;        C2[&amp;quot;Task Management&amp;quot;]:::sched&#xA;        C3[&amp;quot;Timer&amp;quot;]:::sched&#xA;        C4[&amp;quot;Coroutine Handling&amp;quot;]:::sched&#xA;    end&#xA;&#xA;    subgraph &amp;quot;Node &amp;amp; Service Management&amp;quot;&#xA;        D1[&amp;quot;Node&amp;quot;]:::node&#xA;        D2[&amp;quot;Service&amp;quot;]:::node&#xA;        D3[&amp;quot;Parameter&amp;quot;]:::node&#xA;        D4[&amp;quot;Component&amp;quot;]:::node&#xA;    end&#xA;&#xA;    subgraph &amp;quot;Discovery &amp;amp; Dynamic Loading&amp;quot;&#xA;        E1[&amp;quot;Service Discovery&amp;quot;]:::disc&#xA;        E2[&amp;quot;Class Loader&amp;quot;]:::disc&#xA;    end&#xA;&#xA;    subgraph &amp;quot;Logging &amp;amp; Record&amp;quot;&#xA;        F1[&amp;quot;Logger&amp;quot;]:::log&#xA;        F2[&amp;quot;Record&amp;quot;]:::log&#xA;    end&#xA;&#xA;    subgraph &amp;quot;External Interfaces &amp;amp; Tools&amp;quot;&#xA;        G1[&amp;quot;Python Interface&amp;quot;]:::external&#xA;        G2[&amp;quot;Developer Tools&amp;quot;]:::external&#xA;    end&#xA;&#xA;    subgraph &amp;quot;Third Party Dependencies&amp;quot;&#xA;        H1[&amp;quot;Third Party Libraries&amp;quot;]:::third&#xA;    end&#xA;&#xA;    %% Core Runtime interactions&#xA;    A --&amp;gt;|&amp;quot;publishes&amp;quot;| B2&#xA;    A --&amp;gt;|&amp;quot;manages&amp;quot;| B1&#xA;    A --&amp;gt;|&amp;quot;manages&amp;quot;| B3&#xA;    A --&amp;gt;|&amp;quot;manages&amp;quot;| B4&#xA;    A --&amp;gt;|&amp;quot;schedules&amp;quot;| C1&#xA;    A --&amp;gt;|&amp;quot;controls&amp;quot;| D1&#xA;    A --&amp;gt;|&amp;quot;controls&amp;quot;| D2&#xA;    A --&amp;gt;|&amp;quot;controls&amp;quot;| D3&#xA;    A --&amp;gt;|&amp;quot;controls&amp;quot;| D4&#xA;    A --&amp;gt;|&amp;quot;discovers&amp;quot;| E1&#xA;    A --&amp;gt;|&amp;quot;discovers&amp;quot;| E2&#xA;    A --&amp;gt;|&amp;quot;logsTo&amp;quot;| F1&#xA;    A --&amp;gt;|&amp;quot;recordsTo&amp;quot;| F2&#xA;    A --&amp;gt;|&amp;quot;configures&amp;quot;| config&#xA;&#xA;    %% External Interfaces interactions&#xA;    G1 --&amp;gt;|&amp;quot;callsAPI&amp;quot;| A&#xA;    G2 --&amp;gt;|&amp;quot;monitors&amp;quot;| A&#xA;&#xA;    %% Node and Messaging interaction&#xA;    D1 --&amp;gt;|&amp;quot;sendsMsg&amp;quot;| B2&#xA;&#xA;    %% Scheduler internal flow&#xA;    C1 --&amp;gt;|&amp;quot;dispatches&amp;quot;| C2&#xA;    C1 --&amp;gt;|&amp;quot;fires&amp;quot;| C3&#xA;    C1 --&amp;gt;|&amp;quot;orchestrates&amp;quot;| C4&#xA;&#xA;    %% Service Discovery updates&#xA;    E1 --&amp;gt;|&amp;quot;updates&amp;quot;| D1&#xA;    E1 --&amp;gt;|&amp;quot;updates&amp;quot;| D2&#xA;&#xA;    %% Third Party dependency&#xA;    H1 --&amp;gt;|&amp;quot;supports&amp;quot;| A&#xA;    &#xA;    %% Styles&#xA;    classDef core fill:#00ffff,stroke:#000,stroke-width:2px;&#xA;    classDef comm fill:#ffcccc,stroke:#ff0000,stroke-width:2px;&#xA;    classDef sched fill:#ccffcc,stroke:#008000,stroke-width:2px;&#xA;    classDef node fill:#e6ccff,stroke:#0000ff,stroke-width:2px;&#xA;    classDef disc fill:#ffffcc,stroke:#cccc00,stroke-width:2px;&#xA;    classDef log fill:#ffeecc,stroke:#cc6600,stroke-width:2px;&#xA;    classDef external fill:#e0e0e0,stroke:#333333,stroke-width:2px;&#xA;    classDef config fill:#d0d0ff,stroke:#000080,stroke-width:2px;&#xA;    classDef third fill:#f0e68c,stroke:#b8860b,stroke-width:2px;&#xA;&#xA;    %% Click Events&#xA;    click A &amp;quot;https://github.com/captainwc/cyberrt/blob/master/cyber/cyber.cc&amp;quot; _blank&#xA;    click config &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/conf&amp;quot; _blank&#xA;    click B1 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/transport&amp;quot; _blank&#xA;    click B2 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/message&amp;quot; _blank&#xA;    click B3 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/data&amp;quot; _blank&#xA;    click B4 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/io&amp;quot; _blank&#xA;    click C1 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/scheduler&amp;quot; _blank&#xA;    click C2 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/task&amp;quot; _blank&#xA;    click C3 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/timer&amp;quot; _blank&#xA;    click C4 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/croutine&amp;quot; _blank&#xA;    click D1 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/node&amp;quot; _blank&#xA;    click D2 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/service&amp;quot; _blank&#xA;    click D3 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/parameter&amp;quot; _blank&#xA;    click D4 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/component&amp;quot; _blank&#xA;    click E1 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/service_discovery&amp;quot; _blank&#xA;    click E2 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/class_loader&amp;quot; _blank&#xA;    click F1 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/logger&amp;quot; _blank&#xA;    click F2 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/record&amp;quot; _blank&#xA;    click G1 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber_py3&amp;quot; _blank&#xA;    click G2 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/cyber/tools&amp;quot; _blank&#xA;    click H1 &amp;quot;https://github.com/captainwc/cyberrt/tree/master/third_party&amp;quot; _blank&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;cyberrt的协程&#34;&gt;CyberRT的协程&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TB&#xA;    %% 定义样式&#xA;    classDef configClass fill:#e1f5fe,stroke:#01579b&#xA;    classDef initClass fill:#e8f5e9,stroke:#1b5e20&#xA;    classDef routineClass fill:#fff3e0,stroke:#e65100&#xA;    classDef scheduleClass fill:#f3e5f5,stroke:#4a148c&#xA;    classDef resourceClass fill:#fbe9e7,stroke:#bf360c&#xA;&#xA;    %% 配置加载模块&#xA;    subgraph ConfigurationModule[配置加载模块]&#xA;        A1[cyber/conf/scheduler.conf]:::configClass --&amp;gt; B1[加载调度策略]:::configClass&#xA;        A2[cyber/conf/choreography.conf]:::configClass --&amp;gt; B2[加载编排配置]:::configClass&#xA;        A3[cyber/conf/classic.conf]:::configClass --&amp;gt; B3[加载经典配置]:::configClass&#xA;        B1 &amp;amp; B2 &amp;amp; B3 --&amp;gt; C1[SchedulerFactory::Instance]:::configClass&#xA;    end&#xA;&#xA;    %% 初始化模块&#xA;    subgraph InitializationModule[初始化模块]&#xA;        D1[cyber::Init]:::initClass --&amp;gt; E1[创建Node]:::initClass&#xA;        E1 --&amp;gt; F1[创建Component]:::initClass&#xA;        F1 --&amp;gt; G1[注册回调函数]:::initClass&#xA;    end&#xA;&#xA;    %% 协程创建模块&#xA;    subgraph RoutineModule[协程创建和管理模块]&#xA;        H1[new CRoutine创建协程]:::routineClass --&amp;gt; I1[初始化RoutineContext]:::routineClass&#xA;        I1 --&amp;gt; J1[分配栈空间]:::routineClass&#xA;        J1 --&amp;gt; K1[设置入口函数]:::routineClass&#xA;        K1 --&amp;gt; L1[设置初始状态READY]:::routineClass&#xA;    end&#xA;&#xA;    %% 调度模块&#xA;    subgraph SchedulerModule[调度模块]&#xA;        M1[Scheduler::Instance]:::scheduleClass --&amp;gt; N1{调度策略选择}:::scheduleClass&#xA;        N1 --&amp;gt;|Choreography| O1[ChoreographyContext]:::scheduleClass&#xA;        N1 --&amp;gt;|Classic| P1[ClassicContext]:::scheduleClass&#xA;        O1 &amp;amp; P1 --&amp;gt; Q1[Processor::Run]:::scheduleClass&#xA;        Q1 --&amp;gt; R1[NextRoutine获取协程]:::scheduleClass&#xA;        R1 --&amp;gt; S1[Resume执行协程]:::scheduleClass&#xA;        S1 --&amp;gt; T1[Yield让出执行权]:::scheduleClass&#xA;        T1 --&amp;gt; R1&#xA;    end&#xA;&#xA;    %% 资源管理模块&#xA;    subgraph ResourceModule[资源管理模块]&#xA;        U1[CCObjectPool管理]:::resourceClass --&amp;gt; V1[协程上下文池]:::resourceClass&#xA;        V1 --&amp;gt; W1[内存分配/释放]:::resourceClass&#xA;        X1[ProcessorManager]:::resourceClass --&amp;gt; Y1[CPU亲和性设置]:::resourceClass&#xA;        Y1 --&amp;gt; Z1[处理器调度]:::resourceClass&#xA;    end&#xA;&#xA;    %% 状态转换模块&#xA;    subgraph StateModule[状态管理模块]&#xA;        STATE_READY[READY状态]&#xA;        STATE_RUNNING[RUNNING状态]&#xA;        STATE_SLEEP[SLEEP状态]&#xA;        STATE_IO_WAIT[IO_WAIT状态]&#xA;        STATE_DATA_WAIT[DATA_WAIT状态]&#xA;        STATE_FINISHED[FINISHED状态]&#xA;&#xA;        STATE_READY --&amp;gt; STATE_RUNNING&#xA;        STATE_RUNNING --&amp;gt; STATE_SLEEP&#xA;        STATE_RUNNING --&amp;gt; STATE_IO_WAIT&#xA;        STATE_RUNNING --&amp;gt; STATE_DATA_WAIT&#xA;        STATE_RUNNING --&amp;gt; STATE_FINISHED&#xA;        STATE_SLEEP &amp;amp; STATE_IO_WAIT &amp;amp; STATE_DATA_WAIT --&amp;gt; STATE_READY&#xA;    end&#xA;&#xA;    %% 模块间的连接&#xA;    ConfigurationModule --&amp;gt; InitializationModule&#xA;    InitializationModule --&amp;gt; RoutineModule&#xA;    RoutineModule --&amp;gt; SchedulerModule&#xA;    SchedulerModule --&amp;gt; ResourceModule&#xA;    SchedulerModule --&amp;gt; StateModule&#xA;&#xA;    %% 关键文件注释&#xA;    %% note1[&amp;quot;/cyber/croutine/croutine.h&amp;quot;]&#xA;    %% note2[&amp;quot;/cyber/scheduler/scheduler.h&amp;quot;]&#xA;    %% note3[&amp;quot;/cyber/scheduler/processor.h&amp;quot;]&#xA;    %% note4[&amp;quot;/cyber/croutine/routine_context.h&amp;quot;]&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>通信中间件术语表</title>
      <link>https://kaikaixixi.xyz/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cyberrt/%E6%9C%AF%E8%AF%AD%E8%A1%A8/</link>
      <pubDate>Thu, 27 Mar 2025 20:24:03 +0000</pubDate>
      <guid>https://kaikaixixi.xyz/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cyberrt/%E6%9C%AF%E8%AF%AD%E8%A1%A8/</guid>
      <description>&lt;h1 id=&#34;术语表&#34;&gt;术语表&lt;/h1&gt;&#xA;&lt;h2 id=&#34;术语&#34;&gt;术语&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;缩写&lt;/th&gt;&#xA;          &lt;th&gt;含义&lt;/th&gt;&#xA;          &lt;th&gt;备注&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;CDR&lt;/td&gt;&#xA;          &lt;td&gt;Common Data Representation&lt;/td&gt;&#xA;          &lt;td&gt;通用数据表示&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;DDS&lt;/td&gt;&#xA;          &lt;td&gt;Data Distribution Service&lt;/td&gt;&#xA;          &lt;td&gt;数据分发服务&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;EDP&lt;/td&gt;&#xA;          &lt;td&gt;Endpoint Discovery Protocol&lt;/td&gt;&#xA;          &lt;td&gt;端点发现协议&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;GUID&lt;/td&gt;&#xA;          &lt;td&gt;Globally Unique Indentifier&lt;/td&gt;&#xA;          &lt;td&gt;全局唯一标识符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;PDP&lt;/td&gt;&#xA;          &lt;td&gt;Participant DiscoveryProtocol&lt;/td&gt;&#xA;          &lt;td&gt;参与者发现协议&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;PIM&lt;/td&gt;&#xA;          &lt;td&gt;Platform Independent Model&lt;/td&gt;&#xA;          &lt;td&gt;平台独立模型&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;PSM&lt;/td&gt;&#xA;          &lt;td&gt;Platform Specific Model&lt;/td&gt;&#xA;          &lt;td&gt;平台专用模型&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;RTPS&lt;/td&gt;&#xA;          &lt;td&gt;Real-Time Publish-Subscribe&lt;/td&gt;&#xA;          &lt;td&gt;实时发布订阅&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;SEDP&lt;/td&gt;&#xA;          &lt;td&gt;Simple Endpoint Discovery Protocol&lt;/td&gt;&#xA;          &lt;td&gt;简单端点发现协议&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;WLP&lt;/td&gt;&#xA;          &lt;td&gt;Write Liveliness Protocol&lt;/td&gt;&#xA;          &lt;td&gt;写入者活跃性协议&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>带着目的学：CyberRT</title>
      <link>https://kaikaixixi.xyz/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cyberrt/%E5%B8%A6%E7%9D%80%E9%97%AE%E9%A2%98%E5%AD%A6cyberrt/</link>
      <pubDate>Tue, 25 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://kaikaixixi.xyz/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cyberrt/%E5%B8%A6%E7%9D%80%E9%97%AE%E9%A2%98%E5%AD%A6cyberrt/</guid>
      <description>&lt;h1 id=&#34;带着目的学cyberrt&#34;&gt;带着目的学：CyberRT&lt;/h1&gt;&#xA;&lt;h2 id=&#34;故事背景&#34;&gt;故事背景&lt;/h2&gt;&#xA;&lt;p&gt;最近处在上学与退学，上班与无业的叠加态，想学点CyberRT、Ros2、DDS这些大型项目为工作做准备。虽说之前实习时也算接触过大型项目了，但是毕竟现在时间更充裕，也没有一个明确的任务催着、针对性的去解决，所以看了好几天代码，给环境配得极其顺手，但是实际上对项目的了解始终停留在0。这也值得小小反思以下：&lt;/p&gt;&#xA;&#xA;          &lt;link rel=&#34;stylesheet&#34; href=&#34;https://kaikaixixi.xyz/css/vendors/admonitions.e8f9d71468684b38dcc32a3631441f47b6ee45ce52f3bcc31201e76cc2b0a193.css&#34; integrity=&#34;sha256-6PnXFGhoSzjcwyo2MUQfR7buRc5S87zDEgHnbMKwoZM=&#34; crossorigin=&#34;anonymous&#34;&gt;&#xA;  &lt;div class=&#34;admonition question&#34;&gt;&#xA;    &lt;div class=&#34;admonition-header&#34;&gt;&#xA;      &lt;svg t=&#34;1742883601984&#34; class=&#34;icon&#34; viewBox=&#34;0 0 1024 1024&#34; version=&#34;1.1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; p-id=&#34;6738&#34; width=&#34;200&#34; height=&#34;200&#34;&gt;&lt;path d=&#34;M512 32C247.04 32 32 224 32 464A410.24 410.24 0 0 0 172.48 768L160 965.12a25.28 25.28 0 0 0 39.04 22.4l168-112A528.64 528.64 0 0 0 512 896c264.96 0 480-192 480-432S776.96 32 512 32z m-21.12 716.16a70.08 70.08 0 1 1 70.4-70.4 70.08 70.08 0 0 1-70.4 70.4z m104.32-280.32c-28.16 22.4-42.88 35.2-42.88 57.28a60.16 60.16 0 0 1-120.32 0c0-77.12 48-116.16 83.2-144.64 22.08-17.92 35.2-29.44 35.2-40.32s0-37.76-59.52-37.76a128 128 0 0 0-64 16.32 64 64 0 0 1-32 9.92 57.6 57.6 0 0 1-57.6-57.6 58.88 58.88 0 0 1 32-51.52 231.04 231.04 0 0 1 128-35.52c105.28 0 176 61.44 176 152.96a160 160 0 0 1-78.08 131.2z&#34; p-id=&#34;6739&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;&#xA;      &lt;span&gt;为什么时间越多反而越看不好项目呢？&lt;/span&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;比较一下，实习的时候看代码，是带着一个明确的目标看的。先有业务场景，比如是一个表达式解析错误的bug，当输入表达式是什么的时候，出现什么样的bug。然后我就专找表达式解析部分的代码，专找相应的case处理逻辑，理解起来就很快。表达式解析的case见多了（业务场景见多了），自然也能理解解析部分的代码，&lt;strong&gt;为什么&lt;/strong&gt; 要那样写。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CyberRT中的代码和工程技巧</title>
      <link>https://kaikaixixi.xyz/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cyberrt/cyberrt%E4%B8%AD%E7%9A%84%E5%B7%A5%E7%A8%8B%E5%92%8C%E4%BB%A3%E7%A0%81%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sat, 01 Mar 2025 18:08:37 +0000</pubDate>
      <guid>https://kaikaixixi.xyz/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/cyberrt/cyberrt%E4%B8%AD%E7%9A%84%E5%B7%A5%E7%A8%8B%E5%92%8C%E4%BB%A3%E7%A0%81%E6%8A%80%E5%B7%A7/</guid>
      <description>&lt;h1 id=&#34;cyberrt-中的代码和工程技巧&#34;&gt;CyberRT 中的代码和工程技巧&lt;/h1&gt;&#xA;&lt;h2 id=&#34;c规范&#34;&gt;C++规范&lt;/h2&gt;&#xA;&#xA;          &lt;link rel=&#34;stylesheet&#34; href=&#34;https://kaikaixixi.xyz/css/vendors/admonitions.e8f9d71468684b38dcc32a3631441f47b6ee45ce52f3bcc31201e76cc2b0a193.css&#34; integrity=&#34;sha256-6PnXFGhoSzjcwyo2MUQfR7buRc5S87zDEgHnbMKwoZM=&#34; crossorigin=&#34;anonymous&#34;&gt;&#xA;  &lt;div class=&#34;admonition tip&#34;&gt;&#xA;    &lt;div class=&#34;admonition-header&#34;&gt;&#xA;      &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 384 512&#34;&gt;&lt;path d=&#34;M272 384c9.6-31.9 29.5-59.1 49.2-86.2c0 0 0 0 0 0c5.2-7.1 10.4-14.2 15.4-21.4c19.8-28.5 31.4-63 31.4-100.3C368 78.8 289.2 0 192 0S16 78.8 16 176c0 37.3 11.6 71.9 31.4 100.3c5 7.2 10.2 14.3 15.4 21.4c0 0 0 0 0 0c19.8 27.1 39.7 54.4 49.2 86.2l160 0zM192 512c44.2 0 80-35.8 80-80l0-16-160 0 0 16c0 44.2 35.8 80 80 80zM112 176c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-61.9 50.1-112 112-112c8.8 0 16 7.2 16 16s-7.2 16-16 16c-44.2 0-80 35.8-80 80z&#34;/&gt;&lt;/svg&gt;&#xA;      &lt;span&gt;Tip&lt;/span&gt;&#xA;    &lt;/div&gt;&#xA;      &lt;div class=&#34;admonition-content&#34;&gt;&#xA;        &lt;p&gt;C++设计类时总有一些不确定的写法，这里列举出 CyberRT 中的一些设计，作为参考&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
